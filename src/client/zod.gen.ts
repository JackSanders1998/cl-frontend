// This file is auto-generated by @hey-api/openapi-ts

import { z } from 'zod';

export const zAttempt = z.enum(['onsight', 'flash', 'redpoint', 'fall']);

export const zCreateLocation = z.object({
	author: z.string(),
	description: z.union([z.string(), z.null()]).optional(),
	environment: z.enum(['gym', 'outdoor']),
	name: z.string()
});

export const zCreatePreference = z.object({
	boulder_scale: z.string(),
	color_scheme: z.string(),
	sport_scale: z.string(),
	theme: z.string()
});

export const zCreateRoute = z.object({
	author: z.string(),
	description: z.union([z.string(), z.null()]).optional(),
	disciplines: z.array(z.enum(['boulder', 'sport', 'top_rope'])),
	grade: z.string(),
	location_id: z.string().uuid(),
	scale: z.enum(['verm', 'font', 'yosemite', 'french'])
});

export const zCreateSesh = z.object({
	location_id: z.string().uuid(),
	notes: z.union([z.string(), z.null()]).optional()
});

export const zCreateTick = z.object({
	attempt: zAttempt,
	discipline: z.enum(['boulder', 'sport', 'top_rope']),
	lap_group: z.union([z.string().uuid(), z.null()]).optional(),
	notes: z.union([z.string(), z.null()]).optional(),
	route_id: z.string().uuid(),
	sesh_id: z.string().uuid()
});

export const zDiscipline = z.enum(['boulder', 'sport', 'top_rope']);

export const zEnvironment = z.enum(['gym', 'outdoor']);

export const zLocation = z.object({
	author: z.string(),
	created_at: z.string().datetime(),
	description: z.union([z.string(), z.null()]).optional(),
	environment: zEnvironment,
	location_id: z.string().uuid(),
	name: z.string(),
	updated_at: z.string().datetime()
});

export const zLocationSearchParams = z.object({
	name: z.union([z.string(), z.null()]).optional()
});

export const zPreference = z.object({
	boulder_scale: z.string(),
	color_scheme: z.string(),
	created_at: z.string().datetime(),
	preference_id: z.string().uuid(),
	sport_scale: z.string(),
	theme: z.string(),
	updated_at: z.string().datetime(),
	user_id: z.string()
});

export const zRoute = z.object({
	author: z.string(),
	created_at: z.string().datetime(),
	description: z.union([z.string(), z.null()]).optional(),
	disciplines: z.array(zDiscipline),
	grade: z.string(),
	location_id: z.string().uuid(),
	route_id: z.string().uuid(),
	scale: z.enum(['verm', 'font', 'yosemite', 'french']),
	updated_at: z.string().datetime()
});

export const zRouteWithLocation = z.object({
	author: z.string(),
	created_at: z.string().datetime(),
	description: z.union([z.string(), z.null()]).optional(),
	disciplines: z.array(zDiscipline),
	grade: z.string(),
	location: zLocation,
	route_id: z.string().uuid(),
	scale: z.enum(['verm', 'font', 'yosemite', 'french']),
	updated_at: z.string().datetime()
});

export const zRouteWithLocationSqlx = z.object({
	author: z.string(),
	created_at: z.string().datetime(),
	description: z.union([z.string(), z.null()]).optional(),
	disciplines: z.array(zDiscipline),
	environment: zEnvironment,
	grade: z.string(),
	location_author: z.string(),
	location_created_at: z.string().datetime(),
	location_description: z.union([z.string(), z.null()]).optional(),
	location_id: z.string().uuid(),
	location_updated_at: z.string().datetime(),
	name: z.string(),
	route_id: z.string().uuid(),
	scale: z.enum(['verm', 'font', 'yosemite', 'french']),
	updated_at: z.string().datetime()
});

export const zScale = z.enum(['verm', 'font', 'yosemite', 'french']);

export const zSeshRow = z.object({
	created_at: z.string().datetime(),
	end: z.union([z.string().datetime(), z.null()]).optional(),
	location_id: z.string().uuid(),
	notes: z.union([z.string(), z.null()]).optional(),
	sesh_id: z.string().uuid(),
	start: z.string().datetime(),
	updated_at: z.string().datetime(),
	user_id: z.string()
});

export const zSeshWithLocation = z.object({
	created_at: z.string().datetime(),
	end: z.union([z.string().datetime(), z.null()]).optional(),
	location: zLocation,
	notes: z.union([z.string(), z.null()]).optional(),
	sesh_id: z.string().uuid(),
	start: z.string().datetime(),
	updated_at: z.string().datetime(),
	user_id: z.string()
});

export const zSeshWithLocationAndTicks = z.object({
	created_at: z.string().datetime(),
	end: z.union([z.string().datetime(), z.null()]).optional(),
	location: zLocation,
	notes: z.union([z.string(), z.null()]).optional(),
	sesh_id: z.string().uuid(),
	start: z.string().datetime(),
	ticks: z.array(
		z.object({
			attempt: zAttempt,
			created_at: z.string().datetime(),
			discipline: zDiscipline,
			lap_group: z.union([z.string().uuid(), z.null()]).optional(),
			notes: z.union([z.string(), z.null()]).optional(),
			route: zRouteWithLocation,
			route_id: z.string().uuid(),
			sesh_id: z.string().uuid(),
			tick_id: z.string().uuid(),
			updated_at: z.string().datetime()
		})
	),
	updated_at: z.string().datetime(),
	user_id: z.string()
});

export const zSeshWithLocationSqlx = z.object({
	author: z.string(),
	created_at: z.string().datetime(),
	description: z.union([z.string(), z.null()]).optional(),
	end: z.union([z.string().datetime(), z.null()]).optional(),
	environment: zEnvironment,
	location_created_at: z.string().datetime(),
	location_id: z.string().uuid(),
	location_updated_at: z.string().datetime(),
	name: z.string(),
	notes: z.union([z.string(), z.null()]).optional(),
	sesh_id: z.string().uuid(),
	start: z.string().datetime(),
	updated_at: z.string().datetime(),
	user_id: z.string()
});

export const zTickRow = z.object({
	attempt: zAttempt,
	created_at: z.string().datetime(),
	discipline: zDiscipline,
	lap_group: z.union([z.string().uuid(), z.null()]).optional(),
	notes: z.union([z.string(), z.null()]).optional(),
	route_id: z.string().uuid(),
	sesh_id: z.string().uuid(),
	tick_id: z.string().uuid(),
	updated_at: z.string().datetime()
});

export const zTickSearchParams = z.object({
	sesh_id: z.string().uuid()
});

export const zTickWithRoute = z.object({
	attempt: zAttempt,
	created_at: z.string().datetime(),
	discipline: zDiscipline,
	lap_group: z.union([z.string().uuid(), z.null()]).optional(),
	notes: z.union([z.string(), z.null()]).optional(),
	route: zRouteWithLocation,
	route_id: z.string().uuid(),
	sesh_id: z.string().uuid(),
	tick_id: z.string().uuid(),
	updated_at: z.string().datetime()
});

export const zTickWithRouteSqlx = z.object({
	attempt: zAttempt,
	author: z.string(),
	created_at: z.string().datetime(),
	description: z.union([z.string(), z.null()]).optional(),
	discipline: zDiscipline,
	disciplines: z.array(zDiscipline),
	environment: zEnvironment,
	grade: z.string(),
	lap_group: z.union([z.string().uuid(), z.null()]).optional(),
	location_author: z.string(),
	location_created_at: z.string().datetime(),
	location_description: z.union([z.string(), z.null()]).optional(),
	location_id: z.string().uuid(),
	location_updated_at: z.string().datetime(),
	name: z.string(),
	notes: z.union([z.string(), z.null()]).optional(),
	route_created_at: z.string().datetime(),
	route_id: z.string().uuid(),
	route_updated_at: z.string().datetime(),
	scale: zScale,
	sesh_id: z.string().uuid(),
	tick_id: z.string().uuid(),
	updated_at: z.string().datetime()
});

export const zUpdateLocation = z.object({
	description: z.union([z.string(), z.null()]).optional(),
	environment: z.union([zEnvironment, z.null()]).optional(),
	name: z.union([z.string(), z.null()]).optional()
});

export const zUpdatePreference = z.object({
	boulder_scale: z.union([z.string(), z.null()]).optional(),
	color_scheme: z.union([z.string(), z.null()]).optional(),
	sport_scale: z.union([z.string(), z.null()]).optional(),
	theme: z.union([z.string(), z.null()]).optional()
});

export const zUpdateRoute = z.object({
	description: z.union([z.string(), z.null()]).optional(),
	disciplines: z.union([z.array(zDiscipline), z.null()]).optional(),
	grade: z.union([z.string(), z.null()]).optional(),
	scale: z.union([zScale, z.null()]).optional()
});

export const zUpdateSesh = z.object({
	end_session: z.union([z.boolean(), z.null()]).optional(),
	location_id: z.union([z.string().uuid(), z.null()]).optional(),
	notes: z.union([z.string(), z.null()]).optional()
});

export const zSearchLocationsResponse = z.array(zLocation);

export const zCreateLocationResponse = zLocation;

export const zDeleteLocationByLocationIdResponse = z.void();

export const zGetLocationByLocationIdResponse = zLocation;

export const zUpdateLocationByLocationIdResponse = zLocation;

export const zSearchRoutesResponse = z.array(zRoute);

export const zCreateRouteResponse = zRoute;

export const zDeleteRouteResponse = z.void();

export const zGetRouteByRouteIdResponse = zRouteWithLocation;

export const zSearchSeshesResponse = z.array(zSeshWithLocation);

export const zCreateSeshResponse = zSeshWithLocation;

export const zGetActiveSeshResponse = zSeshWithLocation;

export const zDeleteSeshResponse = z.void();

export const zGetSeshBySeshIdResponse = zSeshWithLocationAndTicks;

export const zUpdateSeshBySeshIdResponse = zSeshRow;

export const zSearchTicksResponse = z.array(zTickWithRoute);

export const zCreateTickResponse = zCreateTick;
